# Generated by Django 5.0.2 on 2024-02-09 06:07

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('BackendWork', '0002_moduser_address_moduser_firstname_moduser_lastname_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('addressId', models.AutoField(primary_key=True, serialize=False)),
                ('line1', models.CharField(max_length=50)),
                ('line2', models.CharField(max_length=50)),
                ('aptNum', models.CharField(max_length=10, null=True)),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('DC', 'District of Columbia'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming'), ('AS', 'American Samoa'), ('GU', 'Guam'), ('MP', 'Northern Mariana Islands'), ('PR', 'Puerto Rico'), ('VI', 'Virgin Islands')], max_length=2)),
                ('zipCode', models.CharField(max_length=5)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('categoryId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('reviewId', models.AutoField(primary_key=True, serialize=False)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=8)),
                ('discount', models.DecimalField(decimal_places=2, max_digits=8)),
                ('tax', models.DecimalField(decimal_places=2, max_digits=8)),
                ('shipping', models.DecimalField(decimal_places=2, max_digits=8)),
                ('orderStatus', models.CharField(max_length=20)),
                ('invoiceDate', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Storefront',
            fields=[
                ('storeId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=500, null=True)),
                ('logoURL', models.URLField(max_length=100, null=True)),
                ('bannerURL', models.URLField(max_length=100, null=True)),
                ('videoURL', models.URLField(max_length=100, null=True)),
                ('dateCreated', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('productId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=1000)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8)),
                ('qoh', models.PositiveIntegerField(default=0, verbose_name='Quantity on Hand')),
                ('weight', models.FloatField()),
                ('length', models.FloatField()),
                ('width', models.FloatField()),
                ('height', models.FloatField()),
                ('dateAdded', models.DateTimeField(auto_now_add=True)),
                ('categoryId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.category')),
                ('soldByStoreId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.storefront')),
            ],
        ),
        migrations.CreateModel(
            name='LineItem',
            fields=[
                ('lineItemId', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField()),
                ('linePrice', models.DecimalField(decimal_places=2, max_digits=8)),
                ('invoiceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.invoice')),
                ('productId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImages',
            fields=[
                ('imageId', models.AutoField(primary_key=True, serialize=False)),
                ('imageURL', models.URLField(max_length=100)),
                ('imageTitle', models.CharField(max_length=30)),
                ('imageDescription', models.CharField(max_length=500, null=True)),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.product')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVideos',
            fields=[
                ('videoId', models.AutoField(primary_key=True, serialize=False)),
                ('videoURL', models.URLField(max_length=100)),
                ('videoTitle', models.CharField(max_length=30)),
                ('videoDescription', models.CharField(max_length=500, null=True)),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.product')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='storeId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.storefront'),
        ),
        migrations.CreateModel(
            name='SubCategory',
            fields=[
                ('subCategoryId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=30)),
                ('categoryId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.category')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='subCategoryId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.subcategory'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('userId', models.AutoField(primary_key=True, serialize=False)),
                ('userType', models.CharField(choices=[('Admin', 'Admin'), ('User', 'User')], max_length=5)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=20, validators=[django.core.validators.MinLengthValidator(5)])),
                ('firstName', models.CharField(max_length=30)),
                ('lastName', models.CharField(max_length=30)),
                ('phoneNum', models.CharField(max_length=10)),
                ('registrationDate', models.DateTimeField(auto_now_add=True)),
                ('billingAddressId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userBillingAddress', to='BackendWork.address')),
                ('shippingAddressId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='userShippingAddress', to='BackendWork.address')),
            ],
        ),
        migrations.CreateModel(
            name='StoreReviews',
            fields=[
                ('reviewId', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.CharField(max_length=500)),
                ('reviewDate', models.DateTimeField(auto_now_add=True)),
                ('storeId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.storefront')),
                ('reviewerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.user')),
            ],
        ),
        migrations.AddField(
            model_name='storefront',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.user'),
        ),
        migrations.CreateModel(
            name='ProductReviews',
            fields=[
                ('reviewId', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.CharField(max_length=500)),
                ('reviewDate', models.DateTimeField(auto_now_add=True)),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.product')),
                ('reviewerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.user')),
            ],
        ),
        migrations.CreateModel(
            name='ProductQuestions',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.CharField(max_length=500)),
                ('dateAsked', models.DateTimeField(auto_now_add=True)),
                ('answer', models.CharField(max_length=500)),
                ('dateAnswered', models.DateTimeField(default=None)),
                ('productId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.product')),
                ('askedById', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.user')),
            ],
        ),
        migrations.AddField(
            model_name='invoice',
            name='customerId',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.user'),
        ),
        migrations.CreateModel(
            name='DisputeTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('disputeDetails', models.CharField(max_length=1000)),
                ('disputeDate', models.DateTimeField(auto_now_add=True)),
                ('disputeStatus', models.CharField(max_length=20)),
                ('resolutionDetails', models.CharField(max_length=1000)),
                ('resolutionDate', models.DateTimeField()),
                ('invoiceId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.invoice')),
                ('initiatorId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='initiatedTickets', to='BackendWork.user')),
                ('resolvedBy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolvedTickets', to='BackendWork.user')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerReviews',
            fields=[
                ('reviewId', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.PositiveIntegerField()),
                ('comment', models.CharField(max_length=500)),
                ('reviewDate', models.DateTimeField(auto_now_add=True)),
                ('reviewerId', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='BackendWork.storefront')),
                ('customerId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.user')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='userId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BackendWork.user'),
        ),
    ]
